<ui:UiWindow
    x:Class="DevLynx.Packaging.Visualizer.Shell"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:app="clr-namespace:DevLynx.Packaging.Visualizer"
    xmlns:controls="clr-namespace:DevLynx.Packaging.Visualizer.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:rui="clr-namespace:DevLynx.Packaging.Visualizer.UI"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:views="clr-namespace:DevLynx.Packaging.Visualizer.Views"
    xmlns:vm="clr-namespace:DevLynx.Packaging.Visualizer.ViewModels"
    x:Name="_rootWindow"
    Title="{Binding Source={x:Static app:AppBase.PRODUCT_NAME}}"
    Width="800"
    Height="800"
    d:DataContext="{d:DesignInstance vm:ShellViewModel}"
    prism:ViewModelLocator.AutoWireViewModel="False"
    ExtendsContentIntoTitleBar="True"
    WindowBackdropType="Mica"
    WindowCornerPreference="Round"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <Grid>
        <DockPanel>
            <ui:TitleBar
                Title="{Binding Source={x:Static app:AppBase.PRODUCT_NAME}}"
                DockPanel.Dock="Top"
                ForceShutdown="False"
                MinimizeToTray="False"
                ShowHelp="False"
                ShowMaximize="True"
                ShowMinimize="True"
                UseSnapLayout="True" />

            <ui:NavigationStore SelectedPageIndex="0" TransitionType="FadeIn">
                <ui:NavigationStore.Items>
                    <ui:NavigationItem
                        Cache="True"
                        Command="{Binding NavigateCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=PageTag}"
                        Content="Home"
                        Icon="Home24"
                        PageTag="home">
                        <ui:NavigationItem.IsActive>
                            <MultiBinding Converter="{StaticResource EquityConverter}">
                                <Binding Path="MenuViewTag" />
                                <Binding Path="PageTag" RelativeSource="{RelativeSource Self}" />
                            </MultiBinding>
                        </ui:NavigationItem.IsActive>
                    </ui:NavigationItem>

                    <ui:NavigationItem
                        Command="{Binding NavigateCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=PageTag}"
                        Content="About"
                        Icon="Info24"
                        PageTag="about">
                        <ui:NavigationItem.IsActive>
                            <MultiBinding Converter="{StaticResource EquityConverter}">
                                <Binding Path="MenuViewTag" />
                                <Binding Path="PageTag" RelativeSource="{RelativeSource Self}" />
                            </MultiBinding>
                        </ui:NavigationItem.IsActive>
                    </ui:NavigationItem>
                </ui:NavigationStore.Items>
            </ui:NavigationStore>

            <ContentControl prism:RegionManager.RegionName="{x:Static app:AppBase.MENU_REGION}">
                <rui:ContentControlProps.ChangedAnimation>
                    <Storyboard>
                        <ThicknessAnimation
                            Storyboard.TargetProperty="Margin"
                            From="0,30,0,-30"
                            To="0"
                            Duration="0:0:0.3" />
                    </Storyboard>
                </rui:ContentControlProps.ChangedAnimation>
            </ContentControl>

            <!--<Frame x:Name="_rootFrame" />-->





            <!--<DockPanel>
                <ContentControl prism:RegionManager.RegionName="{Binding Source={x:Static app:AppBase.MAIN_REGION}}">
                    <rui:ContentControlProps.ChangedAnimation>
                        <Storyboard>
                            <ThicknessAnimation To="0" From="30,0,-30,0" Duration="0:0:0.3" Storyboard.TargetProperty="Margin"/>
                        </Storyboard>
                    </rui:ContentControlProps.ChangedAnimation>
                </ContentControl>
            </DockPanel>-->
        </DockPanel>

        <ui:Dialog ButtonLeftAppearance="Info">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Loaded">
                    <prism:InvokeCommandAction Command="{Binding DialogLoadedCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <ContentControl x:Name="_dialogContent" Content="{Binding Dialog.Kind}">
                <ContentControl.ContentTemplateSelector>
                    <rui:DialogSelector>
                        <rui:DialogSelector.ItemDialogTemplate>
                            <DataTemplate>
                                <!--  DataContext="{Binding ElementName=_rootWindow, Path=DataContext}"  -->
                                <controls:ViewResolver TargetView="{x:Type views:ItemDialog}" />
                            </DataTemplate>
                        </rui:DialogSelector.ItemDialogTemplate>

                        <rui:DialogSelector.EmptyTemplate>
                            <DataTemplate>
                                <Border />
                            </DataTemplate>
                        </rui:DialogSelector.EmptyTemplate>
                    </rui:DialogSelector>
                </ContentControl.ContentTemplateSelector>
            </ContentControl>
        </ui:Dialog>

        <ui:Snackbar
            MaxWidth="600"
            Appearance="Secondary"
            CloseButtonEnabled="True"
            Timeout="5000">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Loaded">
                    <prism:InvokeCommandAction Command="{Binding SnackbarLoadedCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ui:Snackbar>
    </Grid>
</ui:UiWindow>
